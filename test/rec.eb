
(putchar c) ? 
(sub y x) ?
(add y x) ?
(mul y x) ?
(div y x) ?
(mod y x) ?
(lt y x) ?

(putd n)
putchar add '0 mod 10 n

(putn n)
if  lt n 9
    do  putn div 10 n
        putd n
    putd n

(putnln n)
do  putn n
    putchar '\n

(is-prime-from x n)
if  lt mul n n x
    1
    if mod n x
        is-prime-from x add 2 n
        0

(is-prime x)
if  mod 2 x
    is-prime-from x 3
    0

(primes-range-odd low high (prime state p) state)
if  lt low high
    state
    if  is-prime low
        let next prime state low
            primes-range-odd add 2 low high prime next
        primes-range-odd add 2 low high prime state

(primes-upto high (prime state p) state)
if  lt 2 high
    state
    let start prime state 2
        primes-range-odd 3 high prime start

(last-prime state n)
n

(count-prime state n)
add 1 state

(sum-prime state n)
add n state

(print-prime state n)
putnln n

(main)
putnln primes-upto mul 1000 1000 count-prime 0